-- The Warehouse
-- lINK: https://en.wikibooks.org/wiki/SQL_Exercises/The_warehouse

CREATE TABLE Warehouses (
   Code NUMBER PRIMARY KEY NOT NULL,
   Location VARCHAR2(255) NOT NULL ,
   Capacity NUMBER NOT NULL
 );

CREATE TABLE Boxes (
    Code CHAR(4) PRIMARY KEY NOT NULL,
    Contents VARCHAR2(255) NOT NULL ,
    Value REAL NOT NULL ,
    Warehouse INTEGER NOT NULL,
    FOREIGN KEY (Warehouse) REFERENCES Warehouses(Code)
 ) ;
 
DESC Warehouses;

INSERT INTO Warehouses(Code,Location,Capacity) VALUES(1,'Chicago',3);--
INSERT INTO Warehouses(Code,Location,Capacity) VALUES(2,'Chicago',4);
INSERT INTO Warehouses(Code,Location,Capacity) VALUES(3,'New York',7);
INSERT INTO Warehouses(Code,Location,Capacity) VALUES(4,'Los Angeles',2);
INSERT INTO Warehouses(Code,Location,Capacity) VALUES(5,'San Francisco',8);
 
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0MN7','Rocks',180,3);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4H8P','Rocks',250,1);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4RT3','Scissors',190,4);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('7G3H','Rocks',200,1);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8JN6','Papers',75,1);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8Y6U','Papers',50,3);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('9J6F','Papers',175,2);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('LL08','Rocks',140,4);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P0H6','Scissors',125,1);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P2T6','Scissors',150,2);
INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('TU55','Papers',90,5);

--3.1 Select all warehouses.
select * from warehouses;

--3.2 Select all boxes with a value larger than $150.
select * from boxes where value>150;


--3.3 Select all distinct contents in all the boxes.
select distinct contents from boxes;


--3.4 Select the average value of all the boxes.
select avg(value) as Avg from boxes;


--3.5 Select the warehouse code and the average value of the boxes in each warehouse.
select Warehouse , avg(value) from boxes group by warehouse;



--3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.
select Warehouse , avg(value) from boxes group by warehouse having avg(value)>150 ;



--3.7 Select the code of each box, along with the name of the city the box is located in.

select b.warehouse , w.location
from warehouses w
join boxes b on w.code=b.warehouse ;




--3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
    -- Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of omiting the warehouse from the result).

select w.code , count(b.code) as numberofbox
from Warehouses w
left outer join boxes b 
on w.code=b.warehouse
group by w.code;



--3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).

select code from(
     select w.code as code , b.code as cnt_code, w.capacity
     from Warehouses w
     left outer join boxes b 
     on w.code=b.warehouse)temp 
group by code
having max(capacity) < count(cnt_code) ;


--BY window function

select distinct code from(
select code,capacity,
count(cnt_code) over(partition by code) as numberOfBoxes
from(
     select w.code as code , b.code as cnt_code, w.capacity
     from Warehouses w
     left outer join boxes b 
     on w.code=b.warehouse)temp
)a
where numberOfBoxes > capacity;



--3.10 Select the codes of all the boxes located in Chicago.
select b.code
from warehouses w
join boxes b on w.code=b.warehouse 
where w.location='Chicago';


--3.11 Create a new warehouse in New York with a capacity for 3 boxes.
INSERT INTO Warehouses (Code, Location, Capacity) 
VALUES (6, 'New York', 3);



--3.12 Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.
insert into Boxes (code,contents , value , warehouse) 
values ('HSRT' , 'Papers' , 200 , 2);





--3.13 Reduce the value of all boxes by 15%.
UPDATE Boxes
SET Value = Value * 0.75;

--3.14 Remove all boxes with a value lower than $100.

delete from boxes where value<100;




-- 3.15 Remove all boxes from saturated warehouses.
DELETE FROM Boxes
WHERE Warehouse IN (
    SELECT w.Code
    FROM Warehouses w
    JOIN (
        SELECT Warehouse, COUNT(*) as box_count
        FROM Boxes
        GROUP BY Warehouse
    ) b ON w.Code = b.Warehouse
    WHERE b.box_count >= w.Capacity
);







-- 3.16 Add Index for column "Warehouse" in table "boxes"
    -- !!!NOTE!!!: index should NOT be used on small tables in practice











select * from warehouses;
select * from boxes

select w.* , b.*
from warehouses w
join boxes b on w.code=b.warehouse 
















